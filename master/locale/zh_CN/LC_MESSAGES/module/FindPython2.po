# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 08:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindPython2.cmake:6
msgid "FindPython2"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:10
msgid ""
"Finds Python 2 interpreter, compiler and development environment (include "
"directories and libraries):"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:13
msgid "find_package(Python2 [<version>] [COMPONENTS <components>...] [...])"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:17
msgid ""
"When a version is requested, it can be specified as a simple value or as a "
"range. For a detailed description of version range usage and capabilities, "
"refer to the :command:`find_package` command."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:22
msgid "The following components are supported:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:24
msgid "``Interpreter``: search for Python 2 interpreter"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:25
msgid "``Compiler``: search for Python 2 compiler. Only offered by IronPython."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:26
msgid ""
"``Development``: search for development artifacts (include directories and "
"libraries)."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:29
msgid ""
"This component includes two sub-components which can be specified "
"independently:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:33
msgid ""
"``Development.Module``: search for artifacts for Python 2 module "
"developments."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:35
msgid ""
"``Development.Embed``: search for artifacts for Python 2 embedding "
"developments."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:40
msgid ""
"``NumPy``: search for NumPy include directories. Specifying this component "
"imply also the components ``Interpreter`` and ``Development.Module``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:43
msgid ""
"The component ``Development.Module`` is no longer implied when the policy :"
"policy:`CMP0201` is set to ``NEW``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:47
msgid "If no ``COMPONENTS`` are specified, ``Interpreter`` is assumed."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:49
msgid ""
"If component ``Development`` is specified, it implies sub-components "
"``Development.Module`` and ``Development.Embed``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:52
msgid ""
"In a cross-compiling mode (i.e. the :variable:`CMAKE_CROSSCOMPILING` "
"variable is defined to true), the following constraints, when the policy :"
"policy:`CMP0190` is set to ``NEW``, now apply to the requested components:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:57
msgid ""
"``Interpreter`` or ``Compiler`` alone: the host artifacts will be searched."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:58
msgid ""
"``Interpreter`` or ``Compiler`` with ``Development`` or any sub-component: "
"The target artifacts will be searched. In this case, the :variable:"
"`CMAKE_CROSSCOMPILING_EMULATOR` variable must be defined and will be used to "
"execute the interpreter or the compiler."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:63
msgid ""
"When both host and target artifacts are needed, two different calls to the :"
"command:`find_package` command should be done. The "
"``Python_ARTIFACTS_PREFIX`` variable can be helpful in this situation."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:67
msgid ""
"To ensure consistent versions between components ``Interpreter``, "
"``Compiler``, ``Development`` (or one of its sub-components) and ``NumPy``, "
"specify all components at the same time:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:71
msgid "find_package (Python2 COMPONENTS Interpreter Development)"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:75
msgid ""
"This module looks only for version 2 of Python. This module can be used "
"concurrently with :module:`FindPython3` module to use both Python versions."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:78
msgid ""
"The :module:`FindPython` module can be used if Python version does not "
"matter for you."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:83
msgid ""
"If components ``Interpreter`` and ``Development`` (or one of its sub-"
"components) are both specified, this module search only for interpreter with "
"same platform architecture as the one defined by CMake configuration. This "
"constraint does not apply if only ``Interpreter`` component is specified."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:90
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:92
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:94
msgid ""
":ref:`Imported Targets <Imported Targets>` are only created when :prop_gbl:"
"`CMAKE_ROLE` is ``PROJECT``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:98
msgid "``Python2::Interpreter``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:99
msgid ""
"Python 2 interpreter. This target is defined only if the ``Interpreter`` "
"component is found."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:101
msgid "``Python2::InterpreterDebug``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:104
msgid ""
"Python 2 debug interpreter. This target is defined only if the "
"``Interpreter`` component is found and the ``Python2_EXECUTABLE_DEBUG`` "
"variable is defined. The target is only defined on the ``Windows`` platform."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:108
msgid "``Python2::InterpreterMultiConfig``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:111
msgid ""
"Python 2 interpreter. The release or debug version of the interpreter will "
"be used, based on the context (platform, configuration). This target is "
"defined only if the ``Interpreter`` component is found"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:115
msgid "``Python2::Compiler``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:116
msgid ""
"Python 2 compiler. This target is defined only if the ``Compiler`` component "
"is found."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:118
msgid "``Python2::Module``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:121
msgid ""
"Python 2 library for Python module. Target defined if component "
"``Development.Module`` is found."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:124
msgid "``Python2::Python``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:125
msgid ""
"Python 2 library for Python embedding. Target defined if component "
"``Development.Embed`` is found."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:128
msgid "``Python2::NumPy``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:131
msgid ""
"NumPy library for Python 2. Target defined if component ``NumPy`` is found. "
"Moreover, this target has the ``Python2::Module`` target as dependency."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:134
msgid ""
"This target does not have anymore the ``Python2::Module`` target as "
"dependency when the policy :policy:`CMP0201` is set to ``NEW``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:139
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:141
msgid ""
"This module defines the following variables (see :ref:`Standard Variable "
"Names <CMake Developer Standard Variable Names>`):"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:144
msgid "``Python2_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:145
msgid "System has the Python 2 requested components."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:146
msgid "``Python2_Interpreter_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:147
msgid "System has the Python 2 interpreter."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:148
#: ../../../../Modules/FindPython2.cmake:418
msgid "``Python2_EXECUTABLE``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:149
msgid "Path to the Python 2 interpreter."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:150
msgid "``Python2_EXECUTABLE_DEBUG``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:153
msgid ""
"Path to the debug Python 2 interpreter. It is only defined on the "
"``Windows`` platform."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:156
msgid "``Python2_INTERPRETER``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:159
msgid ""
"Path to the Python 2 interpreter, defined as a :manual:`generator expression "
"<cmake-generator-expressions(7)>` selecting the ``Python2_EXECUTABLE`` or "
"``Python2_EXECUTABLE_DEBUG`` variable based on the context (platform, "
"configuration)."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:164
msgid "``Python2_INTERPRETER_ID``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:165
msgid "A short string unique to the interpreter. Possible values include:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:166
msgid "Python"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:167
msgid "ActivePython"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:168
msgid "Anaconda"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:169
msgid "Canopy"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:170
#: ../../../../Modules/FindPython2.cmake:198
msgid "IronPython"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:171
msgid "PyPy"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:172
msgid "``Python2_STDLIB``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:173
msgid "Standard platform independent installation directory."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:175
msgid ""
"Information returned by ``sysconfig.get_path('stdlib')`` or else ``distutils."
"sysconfig.get_python_lib(plat_specific=False,standard_lib=True)``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:177
msgid "``Python2_STDARCH``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:178
msgid "Standard platform dependent installation directory."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:180
msgid ""
"Information returned by ``sysconfig.get_path('platstdlib')`` or else "
"``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:182
msgid "``Python2_SITELIB``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:183
msgid "Third-party platform independent installation directory."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:185
msgid ""
"Information returned by ``sysconfig.get_path('purelib')`` or else "
"``distutils.sysconfig.get_python_lib(plat_specific=False,"
"standard_lib=False)``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:187
msgid "``Python2_SITEARCH``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:188
msgid "Third-party platform dependent installation directory."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:190
msgid ""
"Information returned by ``sysconfig.get_path('platlib')`` or else "
"``distutils.sysconfig.get_python_lib(plat_specific=True,"
"standard_lib=False)``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:192
msgid "``Python2_Compiler_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:193
msgid "System has the Python 2 compiler."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:194
#: ../../../../Modules/FindPython2.cmake:421
msgid "``Python2_COMPILER``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:195
msgid "Path to the Python 2 compiler. Only offered by IronPython."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:196
msgid "``Python2_COMPILER_ID``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:197
msgid "A short string unique to the compiler. Possible values include:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:200
#: ../../../../Modules/FindPython2.cmake:424
msgid "``Python2_DOTNET_LAUNCHER``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:203
#: ../../../../Modules/FindPython2.cmake:427
msgid "The ``.Net`` interpreter. Only used by ``IronPython`` implementation."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:205
msgid "``Python2_Development_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:206
msgid "System has the Python 2 development artifacts."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:208
msgid "``Python2_Development.Module_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:211
msgid "System has the Python 2 development artifacts for Python module."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:213
msgid "``Python2_Development.Embed_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:216
msgid "System has the Python 2 development artifacts for Python embedding."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:218
msgid "``Python2_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:219
msgid "The Python 2 include directories."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:221
msgid "``Python2_DEBUG_POSTFIX``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:224
msgid ""
"Postfix of debug python module. This variable can be used to define the :"
"prop_tgt:`DEBUG_POSTFIX` target property."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:227
msgid "``Python2_LINK_OPTIONS``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:230
msgid ""
"The Python 2 link options. Some configurations require specific link options "
"for a correct build and execution."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:233
msgid "``Python2_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:234
msgid "The Python 2 libraries."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:235
msgid "``Python2_LIBRARY_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:236
msgid "The Python 2 library directories."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:237
msgid "``Python2_RUNTIME_LIBRARY_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:238
msgid "The Python 2 runtime library directories."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:239
msgid "``Python2_VERSION``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:240
msgid "Python 2 version."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:241
msgid "``Python2_VERSION_MAJOR``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:242
msgid "Python 2 major version."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:243
msgid "``Python2_VERSION_MINOR``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:244
msgid "Python 2 minor version."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:245
msgid "``Python2_VERSION_PATCH``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:246
msgid "Python 2 patch version."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:248
msgid "``Python2_PyPy_VERSION``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:251
msgid "Python 2 PyPy version."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:253
msgid "``Python2_NumPy_FOUND``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:256
msgid "System has the NumPy."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:258
msgid "``Python2_NumPy_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:261
msgid "The NumPy include directories."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:263
msgid "``Python2_NumPy_VERSION``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:266
msgid "The NumPy version."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:269
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:271
msgid "``Python2_ROOT_DIR``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:272
msgid "Define the root directory of a Python 2 installation."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:274
msgid "``Python2_USE_STATIC_LIBS``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:275
msgid ""
"If not defined, search for shared libraries and static libraries in that "
"order."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:277
msgid "If set to TRUE, search **only** for static libraries."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:278
msgid "If set to FALSE, search **only** for shared libraries."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:282
msgid ""
"This hint will be ignored on ``Windows`` because static libraries are not "
"available on this platform."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:285
msgid "``Python2_FIND_STRATEGY``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:288
msgid ""
"This variable defines how lookup will be done. The ``Python2_FIND_STRATEGY`` "
"variable can be set to one of the following:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:291
msgid ""
"``VERSION``: Try to find the most recent version in all specified locations. "
"This is the default if policy :policy:`CMP0094` is undefined or set to "
"``OLD``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:295
msgid ""
"``LOCATION``: Stops lookup as soon as a version satisfying version "
"constraints is founded. This is the default if policy :policy:`CMP0094` is "
"set to ``NEW``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:299
msgid "See also ``Python2_FIND_UNVERSIONED_NAMES``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:301
msgid "``Python2_FIND_REGISTRY``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:304
msgid ""
"On Windows the ``Python2_FIND_REGISTRY`` variable determine the order of "
"preference between registry and environment variables. the "
"``Python2_FIND_REGISTRY`` variable can be set to one of the following:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:308
msgid ""
"``FIRST``: Try to use registry before environment variables. This is the "
"default."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:310
msgid "``LAST``: Try to use registry after environment variables."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:311
msgid "``NEVER``: Never try to use registry."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:313
msgid "``Python2_FIND_FRAMEWORK``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:316
msgid ""
"On macOS the ``Python2_FIND_FRAMEWORK`` variable determine the order of "
"preference between Apple-style and unix-style package components. This "
"variable can take same values as :variable:`CMAKE_FIND_FRAMEWORK` variable."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:323
msgid "Value ``ONLY`` is not supported so ``FIRST`` will be used instead."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:325
msgid ""
"If ``Python2_FIND_FRAMEWORK`` is not defined, :variable:"
"`CMAKE_FIND_FRAMEWORK` variable will be used, if any."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:328
msgid "``Python2_FIND_VIRTUALENV``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:331
msgid ""
"This variable defines the handling of virtual environments managed by "
"``virtualenv`` or ``conda``. It is meaningful only when a virtual "
"environment is active (i.e. the ``activate`` script has been evaluated). In "
"this case, it takes precedence over ``Python2_FIND_REGISTRY`` and "
"``CMAKE_FIND_FRAMEWORK`` variables.  The ``Python2_FIND_VIRTUALENV`` "
"variable can be set to one of the following:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:338
msgid ""
"``FIRST``: The virtual environment is used before any other standard paths "
"to look-up for the interpreter. This is the default."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:340
msgid ""
"``ONLY``: Only the virtual environment is used to look-up for the "
"interpreter."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:342
msgid ""
"``STANDARD``: The virtual environment is not used to look-up for the "
"interpreter but environment variable ``PATH`` is always considered. In this "
"case, variable ``Python2_FIND_REGISTRY`` (Windows) or "
"``CMAKE_FIND_FRAMEWORK`` (macOS) can be set with value ``LAST`` or ``NEVER`` "
"to select preferably the interpreter from the virtual environment."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:349
msgid "Added support for ``conda`` environments."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:354
msgid ""
"If the component ``Development`` is requested (or one of its sub-components) "
"and is not found or the wrong artifacts are returned, including also the "
"component ``Interpreter`` may be helpful."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:358
msgid "``Python2_FIND_IMPLEMENTATIONS``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:361
msgid ""
"This variable defines, in an ordered list, the different implementations "
"which will be searched. The ``Python2_FIND_IMPLEMENTATIONS`` variable can "
"hold the following values:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:365
msgid ""
"``CPython``: this is the standard implementation. Various products, like "
"``Anaconda`` or ``ActivePython``, rely on this implementation."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:367
msgid ""
"``IronPython``: This implementation use the ``CSharp`` language for ``.NET "
"Framework`` on top of the `Dynamic Language Runtime` (``DLR``). See "
"`IronPython <https://ironpython.net>`_."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:370
msgid ""
"``PyPy``: This implementation use ``RPython`` language and ``RPython "
"translation toolchain`` to produce the python interpreter. See `PyPy "
"<https://pypy.org>`_."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:374
msgid "The default value is:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:376
msgid "Windows platform: ``CPython``, ``IronPython``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:377
msgid "Other platforms: ``CPython``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:381
msgid ""
"This hint has the lowest priority of all hints, so even if, for example, you "
"specify ``IronPython`` first and ``CPython`` in second, a python product "
"based on ``CPython`` can be selected because, for example with "
"``Python2_FIND_STRATEGY=LOCATION``, each location will be search first for "
"``IronPython`` and second for ``CPython``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:389
msgid ""
"When ``IronPython`` is specified, on platforms other than ``Windows``, the "
"``.Net`` interpreter (i.e. ``mono`` command) is expected to be available "
"through the ``PATH`` variable."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:393
msgid "``Python2_FIND_UNVERSIONED_NAMES``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:396
msgid ""
"This variable defines how the generic names will be searched. Currently, it "
"only applies to the generic names of the interpreter, namely, ``python2`` "
"and ``python``. The ``Python2_FIND_UNVERSIONED_NAMES`` variable can be set "
"to one of the following values:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:402
msgid ""
"``FIRST``: The generic names are searched before the more specialized ones "
"(such as ``python2.5`` for example)."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:404
msgid ""
"``LAST``: The generic names are searched after the more specialized ones. "
"This is the default."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:406
msgid "``NEVER``: The generic name are not searched at all."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:408
msgid "See also ``Python2_FIND_STRATEGY``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:411
msgid "Artifacts Specification"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:415
msgid ""
"To solve special cases, it is possible to specify directly the artifacts by "
"setting the following variables:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:419
msgid "The path to the interpreter."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:422
msgid "The path to the compiler."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:429
msgid "``Python2_LIBRARY``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:430
msgid ""
"The path to the library. It will be used to compute the variables "
"``Python2_LIBRARIES``, ``Python2_LIBRARY_DIRS`` and "
"``Python2_RUNTIME_LIBRARY_DIRS``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:434
msgid "``Python2_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:435
msgid ""
"The path to the directory of the ``Python`` headers. It will be used to "
"compute the variable ``Python2_INCLUDE_DIRS``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:438
msgid "``Python2_NumPy_INCLUDE_DIR``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:439
msgid ""
"The path to the directory of the ``NumPy`` headers. It will be used to "
"compute the variable ``Python2_NumPy_INCLUDE_DIRS``."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:444
msgid ""
"All paths must be absolute. Any artifact specified with a relative path will "
"be ignored."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:449
msgid ""
"When an artifact is specified, all ``HINTS`` will be ignored and no search "
"will be performed for this artifact."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:452
msgid ""
"If more than one artifact is specified, it is the user's responsibility to "
"ensure the consistency of the various artifacts."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:455
msgid ""
"By default, this module supports multiple calls in different directories of "
"a project with different version/component requirements while providing "
"correct and consistent results for each call. To support this behavior, "
"CMake cache is not used in the traditional way which can be problematic for "
"interactive specification. So, to enable also interactive specification, "
"module behavior can be controlled with the following variable:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:462
msgid "``Python2_ARTIFACTS_INTERACTIVE``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:465
msgid "Selects the behavior of the module. This is a boolean variable:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:467
msgid ""
"If set to ``TRUE``: Create CMake cache entries for the above artifact "
"specification variables so that users can edit them interactively. This "
"disables support for multiple version/component requirements."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:470
msgid ""
"If set to ``FALSE`` or undefined: Enable multiple version/component "
"requirements."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:473
msgid "``Python2_ARTIFACTS_PREFIX``"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:476
msgid ""
"Define a custom prefix which will be used for the definition of all the "
"result variables, targets, and commands. By using this variable, this module "
"supports multiple calls in the same directory with different version/"
"component requirements. For example, in case of cross-compilation, "
"development components are needed but the native python interpreter can also "
"be required:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:483
msgid ""
"find_package(Python2 COMPONENTS Development)\n"
"\n"
"set(Python2_ARTIFACTS_PREFIX \"_HOST\")\n"
"find_package(Python2 COMPONENTS Interpreter)\n"
"\n"
"# Here Python2_HOST_EXECUTABLE and Python2_HOST::Interpreter artifacts are "
"defined"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:494
msgid ""
"For consistency with standard behavior of modules, the various standard "
"``_FOUND`` variables (i.e. without the custom prefix) are also defined by "
"each call to the :command:`find_package` command."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:499
msgid "Commands"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:501
msgid ""
"This module defines the command ``Python2_add_library`` (when :prop_gbl:"
"`CMAKE_ROLE` is ``PROJECT``), which has the same semantics as :command:"
"`add_library` and adds a dependency to target ``Python2::Python`` or, when "
"library type is ``MODULE``, to target ``Python2::Module`` and takes care of "
"Python module naming rules:"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:507
msgid ""
"Python2_add_library (<name> [STATIC | SHARED | MODULE]\n"
"                     <source1> [<source2> ...])"
msgstr ""

#: ../../../../Modules/FindPython2.cmake:512
msgid "If library type is not specified, ``MODULE`` is assumed."
msgstr ""

#: ../../../../Modules/FindPython2.cmake:514
msgid ""
"For ``MODULE`` type, the :prop_tgt:`DEBUG_POSTFIX` target property is "
"initialized with the value of ``Python2_DEBUG_POSTFIX`` variable if defined."
msgstr ""
