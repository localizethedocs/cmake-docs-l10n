# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2025 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-25 08:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../Modules/FindwxWidgets.cmake:6
msgid "FindwxWidgets"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:8
msgid ""
"Finds a wxWidgets installation and provides usage requirements for usage in "
"projects:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:11
msgid "find_package(wxWidgets [<version>] [COMPONENTS <components>...] [...])"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:15
msgid ""
"wxWidgets (formerly known as wxWindows) is a widget toolkit and tools "
"library for creating graphical user interfaces (GUIs) for cross-platform "
"applications."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:19
msgid "Support for :command:`find_package` version argument."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:22
msgid "``OPTIONAL_COMPONENTS`` support."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:26
msgid "Components"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:28
msgid ""
"wxWidgets is a modular library.  This module supports components to specify "
"the modules to use.  Components can be specified with the :command:"
"`find_package` command:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:32
msgid ""
"find_package(\n"
"  wxWidgets\n"
"  [COMPONENTS <components>...]\n"
"  [OPTIONAL_COMPONENTS <components>...]\n"
")"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:40
msgid "Supported components include:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:42
msgid "``base``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:43
msgid ""
"Finds the library that provides mandatory classes that any wxWidgets code "
"depends on.  This component is always required for applications implementing "
"wxWidgets."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:47
msgid "``core``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:48
msgid ""
"Finds the library that provides basic GUI classes such as GDI classes or "
"controls."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:51
msgid "``gl``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:52
msgid "Finds the OpenGL support."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:54
msgid "``mono``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:55
msgid "Finds the wxWidgets monolithic library."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:57
msgid "``aui``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:58
msgid "Finds the Advanced User Interface docking library."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:60
msgid "``net``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:61
msgid "Finds the library that provides network access."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:63
msgid "``webview``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:66
msgid ""
"Finds the library that provides rendering of web documents (HTML/CSS/"
"JavaScript)."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:69
msgid ""
"For a full list of supported wxWidgets components, refer to the upstream "
"documentation."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:72
msgid ""
"If no components are specified, this module by default searches for ``core`` "
"and ``base`` components."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:76
msgid "Imported Targets"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:78
msgid "This module provides the following :ref:`Imported Targets`:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:80
msgid "``wxWidgets::wxWidgets``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:83
msgid ""
"An interface imported target encapsulating the wxWidgets usage requirements "
"for the found components, available if wxWidgets is found."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:87
msgid "Result Variables"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:89
msgid "This module defines the following variables:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:91
msgid "``wxWidgets_FOUND``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:92
msgid ""
"Boolean indicating whether (the requested version of) wxWidgets and all its "
"requested components are found."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:95
msgid "``wxWidgets_VERSION``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:98
#: ../../../../Modules/FindwxWidgets.cmake:204
msgid "The version of the wxWidgets found."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:100
msgid "``wxWidgets_INCLUDE_DIRS``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:101
msgid ""
"Include directories for WIN32, i.e., where to find ``<wx/wx.h>`` and ``<wx/"
"setup.h>``; possibly empty for Unix-like systems."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:104
msgid "``wxWidgets_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:105
msgid "Path to the wxWidgets libraries."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:107
msgid "``wxWidgets_LIBRARY_DIRS``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:108
msgid ""
"Compile time link dirs, useful for setting ``rpath`` on Unix-like systems. "
"Typically an empty string in WIN32 environment."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:111
msgid "``wxWidgets_DEFINITIONS``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:112
msgid ""
"Contains compile definitions required to compile/link against WX, e.g. "
"``WXUSINGDLL``."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:115
msgid "``wxWidgets_DEFINITIONS_DEBUG``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:116
msgid ""
"Contains compile definitions required to compile/link against WX debug "
"builds, e.g. ``__WXDEBUG__``."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:119
msgid "``wxWidgets_CXX_FLAGS``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:120
msgid ""
"Include directories and compiler flags for Unix-like systems, empty on "
"Windows. Essentially the output of ``wx-config --cxxflags``."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:123
msgid "``wxWidgets_USE_FILE``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:124
msgid ""
"Name of the CMake module for using wxWidgets in current directory.  For "
"usage details refer to the :module:`UsewxWidgets` module."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:128
msgid "Hints"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:130
msgid ""
"This module accepts the following variables before calling "
"``find_package(wxWidgets)``:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:133
msgid "``WX_CONFIG``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:136
msgid ""
"Environment variable to manually specify the name of the wxWidgets library "
"configuration provider executable that will be searched besides the default "
"name ``wx-config``."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:140
msgid "``WXRC_CMD``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:143
msgid ""
"Environment variable to manually specify the name of the wxWidgets resource "
"file compiler executable that will be searched besides the default name "
"``wxrc``."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:147
msgid ""
"There are two search branches: a Windows style and a Unix style.  For "
"Windows, the following variables are searched for and set to defaults in "
"case of multiple choices.  Change them if the defaults are not desired (i."
"e., these are the only variables that should be changed to select a "
"configuration):"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:153
msgid "``wxWidgets_ROOT_DIR``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:154
msgid "Base wxWidgets directory (e.g., ``C:/wxWidgets-3.2.0``)."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:156
msgid "``wxWidgets_LIB_DIR``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:157
msgid ""
"Path to wxWidgets libraries (e.g., ``C:/wxWidgets-3.2.0/lib/vc_x64_lib``)."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:159
msgid "``wxWidgets_CONFIGURATION``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:160
msgid "Configuration to use (e.g., msw, mswd, mswu, mswunivud, etc.)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:162
msgid "``wxWidgets_EXCLUDE_COMMON_LIBRARIES``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:163
msgid ""
"Set to TRUE to exclude linking of commonly required libs (e.g., png, tiff, "
"jpeg, zlib, regex, expat, scintilla, lexilla, etc.)."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:166
msgid ""
"For Unix style this module uses the ``wx-config`` utility.  Selecting "
"between debug/release, unicode/ansi, universal/non-universal, and static/"
"shared is possible in the QtDialog or ccmake interfaces by turning ON/OFF "
"the following variables:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:171
msgid "``wxWidgets_USE_DEBUG``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:172
msgid "If enabled, the wxWidgets debug build will be searched."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:174
msgid "``wxWidgets_USE_UNICODE``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:175
msgid "If enabled, the wxWidgets unicode build will be searched."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:177
msgid "``wxWidgets_USE_UNIVERSAL``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:178
msgid "If enabled, the wxWidgets universal build will be searched."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:180
msgid "``wxWidgets_USE_STATIC``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:181
msgid "If enabled, static wxWidgets libraries will be linked."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:183
msgid "``wxWidgets_CONFIG_OPTIONS``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:184
msgid ""
"This variable can be used for all other options that need to be passed to "
"the wx-config utility.  For example, to use the base toolkit found on the "
"system at ``/usr`` install prefix, set the variable (before calling the :"
"command:`find_package` command) as such:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:189
msgid "set(wxWidgets_CONFIG_OPTIONS --toolkit=base --prefix=/usr)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:194
msgid "Deprecated Variables"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:196
msgid "The following variables are provided for backward compatibility:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:198
msgid "``wxWidgets_VERSION_STRING``"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:199
msgid "Use ``wxWidgets_VERSION``, which has the same value."
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:207
msgid "Examples"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:210
msgid "Example: Finding wxWidgets"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:212
msgid ""
"Finding wxWidgets and making it required (if wxWidgets is not found, "
"processing stops with an error message):"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:215
msgid "find_package(wxWidgets REQUIRED)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:220
msgid "Example: Using Imported Target"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:222
msgid "Finding wxWidgets and using imported target in a project:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:224
msgid ""
"find_package(wxWidgets)\n"
"target_link_libraries(example PRIVATE wxWidgets::wxWidgets)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:230
msgid "Example: Using Components"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:232
msgid "Finding wxWidgets and specifying components:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:234
msgid ""
"find_package(wxWidgets COMPONENTS gl core base OPTIONAL_COMPONENTS net)\n"
"target_link_libraries(example PRIVATE wxWidgets::wxWidgets)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:240
msgid "Example: Monolithic wxWidgets Build"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:242
msgid "Sample usage with monolithic wxWidgets build:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:244
msgid ""
"find_package(wxWidgets COMPONENTS mono)\n"
"target_link_libraries(example PRIVATE wxWidgets::wxWidgets)"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:250
msgid "Example: Using Variables"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:252
msgid ""
"Finding and using wxWidgets in CMake versions prior to 3.27, when the "
"imported target wasn't yet available:"
msgstr ""

#: ../../../../Modules/FindwxWidgets.cmake:255
msgid ""
"# Note that for MinGW users the order of libs is important.\n"
"find_package(wxWidgets COMPONENTS gl core base OPTIONAL_COMPONENTS net)\n"
"\n"
"if(wxWidgets_FOUND)\n"
"  include(${wxWidgets_USE_FILE})\n"
"  # and for each of the project dependent executable/library targets:\n"
"  target_link_libraries(example ${wxWidgets_LIBRARIES})\n"
"endif()"
msgstr ""
